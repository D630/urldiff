#!/usr/bin/env bash

# Copyright (c) D630
# https://github.com/D630/urldiff

# -- DEBUGGING.

#printf '%s (%s)\n' "$BASH_VERSION" "${BASH_VERSINFO[5]}" && exit 0
#set -o xtrace #; exec 2>> ~/urldiff.log
#set -o verbose
#set -o noexec
#set -o errexit
#set -o nounset
#set -o pipefail
#trap '(read -p "[$BASH_SOURCE:$LINENO] $BASH_COMMAND?")' DEBUG

# -- SETTINGS.

#declare vars_base=$(set -o posix ; set)

# --- CONFIG.

builtin declare -r urldiffdir=${XDG_DATA_HOME:-${HOME}/.local/share}/urldiff
builtin declare -r \
    mailto=urldiff@urldiff \
    urllist=${urldiffdir}/urls.txt

# Do not change this variables without looking in the code.
builtin declare -r \
    reportnew=${urldiffdir}/report_new.txt \
    reportold=${urldiffdir}/report.txt

# --- FUNCTIONS.

__urldiff_version() { echo "0.1.2.0" ; }

__urldiff_help()
{
    builtin printf "urldiff (-h|-v) (-nv|-nv|-q) [-m]

OPTIONS
-------
    OPTION                  ARG
    ------                  ---
   -h,  --help
   -m,  --mail               [<MAILTO>...]
   -nv, --no-verbose
   -q,  --quiet
   -vb, --verbose
   -v,  --version

ARGUMENTS
---------
    <MAILTO>                Something like: "user@example.org"
"
}

__urldiff_diff()
{
    command diff -U 0 -iEZbwB "$localascii" "$onlineascii" > "$difftxt"
    #command dwdiff -1 --aggregate-changes --wdiff-output "$localascii" "$onlineascii" > "$difftxt"
    #command wdiff -1 "$localascii" "$onlineascii" > "$difftxt"
}

__urldiff_check()
{
    builtin declare \
        difftxt= \
        localascii= \
        localhtml= \
        onlineascii= \
        onlinehtml= \
        reg="#*" \
        tmpfilename= \
        url="$1"

    # Select only non-commented lines from url list.
    [[ $url == $reg ]] && builtin return 1

    if [[ $url =~ https?://*.* ]]
    then
        builtin read -r tmpfilename _ < <(command md5sum <<< "$url")
        localhtml=${cachedir}/${tmpfilename}.html
        onlinehtml=${cachedir}/${tmpfilename}_new.html
        localascii=${cachedir}/${tmpfilename}.txt
        onlineascii=${cachedir}/${tmpfilename}_new.txt
        difftxt=${diffdir}/${tmpfilename}_diff.txt

        # Get html (only body) via wget and awk.
         command awk '/\<body/ {flag=1;next} /\<\/body\>/{flag=0} flag { print }' \
            < <(command wget $output -t 1 --no-http-keep-alive --no-cache \
                --no-cookies --ignore-length --content-on-error \
                -L -E -O - "$url") > "$onlinehtml"

        # If download has been successfull, convert html into text via w3m.
        if [[ -s $onlinehtml ]]
        then
            command w3m -dump -T text/html > "$onlineascii" < "$onlinehtml"
        else
            command rm -- "$onlinehtml"
            { builtin printf '%s\n' "FAIL $(command date +%Y-%m-%d_%H:%M) URL: ${url} unattainable" >&3 ; builtin return 1 ; }
        fi

        # Prepare files from last session.
        [[ ! -e $localhtml ]] && { command cp -- "$onlinehtml" "$localhtml" ; }
        [[ ! -e $localascii ]] && { command cp -- "$onlineascii" "$localascii" ; }

        # If there is a difference between "online-file" and "local-file",
        # make a detailed diff. In either case make a status update.
        if ! command cmp -s "$onlineascii" "$localascii"
        then
            __urldiff_diff
            { builtin printf '%s\n' "NEW $(command date +%Y-%m-%d_%H:%M) URL: ${url}" "    file://${difftxt}"  "    file://${localhtml}" "    file://${localascii}" ; } >&3
        else
            builtin printf '%s\n' "OLD $(command date +%Y-%m-%d_%H:%M) URL: ${url}" >&3
        fi

        # In the end cleaning up.
        command rm -- "$localhtml" "$localascii"
        command mv -- "$onlinehtml" "$localhtml"
        command mv -- "$onlineascii" "$localascii"

    else
        { builtin printf '%s\n' "FAIL $(command date +%Y-%m-%d_%H:%M) URL: ${url} does not match" >&3 ; builtin return 1 ; }
    fi
}

# --- MAIN.

__urldiff_main()
{
    builtin export -f \
        __urldiff_check \
        __urldiff_diff

    builtin declare -x \
        cachedir=${urldiffdir}/cache \
        diffdir=${urldiffdir}/diff \
        output=

    builtin declare mail=

    # Check connection status.
    if ! command ping -c1 google.com >/dev/null 2>&1
    then
        if ! command wget -O - google.com >/dev/null 2>&1
        then
            # We are probably offline.
            { echo "ERROR We are probably offline." >&2 ; builtin exit 79 ; }
        fi
    fi

    # Get arguments without getopts.
    while builtin :
    do
        case ${1#-} in
            q|-quiet)
                output=-q
                builtin shift 1
                builtin continue
                ;;
            nv|-no-verbose)
                output=-nv
                builtin shift 1
                builtin continue
                ;;
            vb|-verbose)
                output=-v
                builtin shift 1
                builtin continue
                ;;
            m|-mail)
                mail=sendmail
                builtin shift 1
                mailto=${*-$mailto}
                builtin shift "$#"
                builtin continue
                ;;
            h|-help)
                __urldiff_help
                builtin exit 0
                ;;
            v|-version)
                __urldiff_version
                builtin exit 0
                ;;
            *)
                builtin break
        esac
    done

    # If there is no output specified, use "verbose".
    output=${output:-"-v"}

    # Check, if dirs have been created.
    [[ ! -d $diffdir ]] && command mkdir -p -- "$diffdir"
    [[ ! -d $cachedir ]] && command mkdir -p -- "$cachedir"

    # Rename diffs from last session.
    command find -H "$diffdir" -name "*.txt" -execdir rename -f 's/_diff\.txt$/_diff_old\.txt/' {} +

    # Here we go.
    if [[ ! -e $urllist ]]
    then
        # Exit, if there is no url list.
        { echo "ERROR No url list to look for." >&2 ; builtin exit 80 ; }
    else
        # Print first header, if specified.
        [[ $output =~ (-nv|-v) ]] && { command tput bold setaf 7 ; builtin printf '%s\n' 'Checking...' ; command tput sgr0 ; }

        # Read url list, open $reportnew as output via exec and call via
        # xargs functions to get html and to make diff.
        exec 3>>"$reportnew"
        command xargs -a "$urllist" -n 1 -P 8 -i bash -c '__urldiff_check $@' _ {} +
        exec 3<&-

        # Do some post processing.
        if [[ ! -e $reportold ]]
        then
            command cp -- "$reportnew" "$reportold"
        else
            command sed -i 's/_diff.txt/_diff_old.txt/g' "$reportold"
        fi

        # If specified, print header and report to stdout.
        [[ $output != -q ]] &&
        {
            command tput bold setaf 7 ; builtin printf '%s\n' 'Report' ; command tput sgr0
            command sed -n 'p' "$reportnew"
        }

        # If specified, mail report as body.
        [[ $mail == sendmail ]] && command mail -s "[URLDIFF] Report" "$mailto" < "$reportnew"

        # In the end cleaning up.
        command rm -- "$reportold"
        command mv -- "$reportnew" "$reportold"
    fi
}

__urldiff_main "$@"
